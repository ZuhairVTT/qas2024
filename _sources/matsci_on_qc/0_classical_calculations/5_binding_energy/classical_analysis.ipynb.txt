{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def extract_energy_from_cp2k_log(filepath):\n",
    "    \"\"\"Extract the total energy from a CP2K log file using the FORCE_EVAL energy pattern.\"\"\"\n",
    "    try:\n",
    "        with open(filepath, 'r') as f:\n",
    "            content = f.read()\n",
    "            # Look for the FORCE_EVAL total energy\n",
    "            pattern = r'ENERGY\\|\\s*Total FORCE_EVAL \\( QS \\) energy \\[a\\.u\\.\\]:\\s*(-?\\d+\\.\\d+)'\n",
    "            match = re.search(pattern, content)\n",
    "            if match:\n",
    "                return float(match.group(1))\n",
    "            raise ValueError(f\"Could not find FORCE_EVAL total energy in {filepath}\")\n",
    "    except FileNotFoundError:\n",
    "        print(f\"File not found: {filepath}\")\n",
    "        return None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Energies (Hartree):\n",
      "Supercell: -241.400214\n",
      "Substrate: -198.415357\n",
      "Inhibitor: -42.970690\n",
      "\n",
      "Binding Energy:\n",
      "E_binding = -0.014167 Hartree\n",
      "E_binding = -0.385512 eV\n",
      "E_binding = -8.890122 kcal/mol\n"
     ]
    }
   ],
   "source": [
    "# Define paths to the log files\n",
    "supercell_log = \"2_supercell/cp2k.log\"\n",
    "substrate_log = \"3_Al/cp2k.log\"\n",
    "inhibitor_log = \"4_inhibitor/cp2k.log\"\n",
    "\n",
    "# Extract energies\n",
    "E_supercell = extract_energy_from_cp2k_log(supercell_log)\n",
    "E_substrate = extract_energy_from_cp2k_log(substrate_log)\n",
    "E_inhibitor = extract_energy_from_cp2k_log(inhibitor_log)\n",
    "\n",
    "# Calculate binding energy\n",
    "if all(e is not None for e in [E_supercell, E_substrate, E_inhibitor]):\n",
    "    E_binding = E_supercell - (E_substrate + E_inhibitor)\n",
    "    \n",
    "    print(f\"Energies (Hartree):\")\n",
    "    print(f\"Supercell: {E_supercell:.6f}\")\n",
    "    print(f\"Substrate: {E_substrate:.6f}\")\n",
    "    print(f\"Inhibitor: {E_inhibitor:.6f}\")\n",
    "    print(f\"\\nBinding Energy:\")\n",
    "    print(f\"E_binding = {E_binding:.6f} Hartree\")\n",
    "    print(f\"E_binding = {E_binding * 27.211386245988:.6f} eV\")\n",
    "    print(f\"E_binding = {E_binding * 627.509474:.6f} kcal/mol\")\n",
    "else:\n",
    "    print(\"Could not calculate binding energy due to missing data\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "inhibitQ",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
